<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.7-hudson-48-. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.7-hudson-48-. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://service.webservice.serverDatabase.plugins.biomatters.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://service.webservice.serverDatabase.plugins.biomatters.com/" name="GeneiousDatabaseWebServiceService">
<wsp:Policy xmlns:wsp="http://www.w3.org/ns/ws-policy" wsu:Id="GeneiousDatabaseWebServicePortBinding_MTOM_Policy">
<wsp:ExactlyOne>
<wsp:All>
<ns1:OptimizedMimeSerialization xmlns:ns1="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization" />
</wsp:All>
</wsp:ExactlyOne>
</wsp:Policy>
<types>
<xsd:schema>
<xsd:import namespace="http://service.webservice.serverDatabase.plugins.biomatters.com/" schemaLocation="http://localhost:8080/GeneiousServer/services/GeneiousDatabaseWebService?xsd=1" />
</xsd:schema>
</types>
<message name="editUser">
<part name="parameters" element="tns:editUser" />
</message>
<message name="editUserResponse">
<part name="parameters" element="tns:editUserResponse" />
</message>
<message name="RemoteDatabaseException">
<part name="fault" element="tns:RemoteOperationFaultBean" />
</message>
<message name="getMinimumSupportedVersionOfGeneious">
<part name="parameters" element="tns:getMinimumSupportedVersionOfGeneious" />
</message>
<message name="getMinimumSupportedVersionOfGeneiousResponse">
<part name="parameters" element="tns:getMinimumSupportedVersionOfGeneiousResponse" />
</message>
<message name="getGeneiousCoreVersion">
<part name="parameters" element="tns:getGeneiousCoreVersion" />
</message>
<message name="getGeneiousCoreVersionResponse">
<part name="parameters" element="tns:getGeneiousCoreVersionResponse" />
</message>
<message name="getHiddenFolderNamesFromDatabase">
<part name="parameters" element="tns:getHiddenFolderNamesFromDatabase" />
</message>
<message name="getHiddenFolderNamesFromDatabaseResponse">
<part name="parameters" element="tns:getHiddenFolderNamesFromDatabaseResponse" />
</message>
<message name="getHiddenFolderDetailsForUser">
<part name="parameters" element="tns:getHiddenFolderDetailsForUser" />
</message>
<message name="getHiddenFolderDetailsForUserResponse">
<part name="parameters" element="tns:getHiddenFolderDetailsForUserResponse" />
</message>
<message name="getHiddenFolderInformationFromDatabase">
<part name="parameters" element="tns:getHiddenFolderInformationFromDatabase" />
</message>
<message name="getHiddenFolderInformationFromDatabaseResponse">
<part name="parameters" element="tns:getHiddenFolderInformationFromDatabaseResponse" />
</message>
<message name="renameFolderInDatabase">
<part name="parameters" element="tns:renameFolderInDatabase" />
</message>
<message name="renameFolderInDatabaseResponse">
<part name="parameters" element="tns:renameFolderInDatabaseResponse" />
</message>
<message name="moveDocumentToThisDatabaseFolder">
<part name="parameters" element="tns:moveDocumentToThisDatabaseFolder" />
</message>
<message name="moveDocumentToThisDatabaseFolderResponse">
<part name="parameters" element="tns:moveDocumentToThisDatabaseFolderResponse" />
</message>
<message name="removeDocumentFromDatabase">
<part name="parameters" element="tns:removeDocumentFromDatabase" />
</message>
<message name="removeDocumentFromDatabaseResponse">
<part name="parameters" element="tns:removeDocumentFromDatabaseResponse" />
</message>
<message name="getDocumentElementsForUrns">
<part name="parameters" element="tns:getDocumentElementsForUrns" />
</message>
<message name="getDocumentElementsForUrnsResponse">
<part name="parameters" element="tns:getDocumentElementsForUrnsResponse" />
</message>
<message name="createChildFolderInDatabase">
<part name="parameters" element="tns:createChildFolderInDatabase" />
</message>
<message name="createChildFolderInDatabaseResponse">
<part name="parameters" element="tns:createChildFolderInDatabaseResponse" />
</message>
<message name="moveToDatabaseFolder">
<part name="parameters" element="tns:moveToDatabaseFolder" />
</message>
<message name="moveToDatabaseFolderResponse">
<part name="parameters" element="tns:moveToDatabaseFolderResponse" />
</message>
<message name="deleteChildFolderFromDatabase">
<part name="parameters" element="tns:deleteChildFolderFromDatabase" />
</message>
<message name="deleteChildFolderFromDatabaseResponse">
<part name="parameters" element="tns:deleteChildFolderFromDatabaseResponse" />
</message>
<message name="saveDocumentReadStatus">
<part name="parameters" element="tns:saveDocumentReadStatus" />
</message>
<message name="saveDocumentReadStatusResponse">
<part name="parameters" element="tns:saveDocumentReadStatusResponse" />
</message>
<message name="getUserDetailsAndAddToDatabaseIfNecessary">
<part name="parameters" element="tns:getUserDetailsAndAddToDatabaseIfNecessary" />
</message>
<message name="getUserDetailsAndAddToDatabaseIfNecessaryResponse">
<part name="parameters" element="tns:getUserDetailsAndAddToDatabaseIfNecessaryResponse" />
</message>
<message name="createDocumentsForUrnsFromDatabase">
<part name="parameters" element="tns:createDocumentsForUrnsFromDatabase" />
</message>
<message name="createDocumentsForUrnsFromDatabaseResponse">
<part name="parameters" element="tns:createDocumentsForUrnsFromDatabaseResponse" />
</message>
<message name="saveDocumentInDatabase">
<part name="parameters" element="tns:saveDocumentInDatabase" />
</message>
<message name="saveDocumentInDatabaseResponse">
<part name="parameters" element="tns:saveDocumentInDatabaseResponse" />
</message>
<message name="saveDocumentInDatabaseWithResult">
<part name="parameters" element="tns:saveDocumentInDatabaseWithResult" />
</message>
<message name="saveDocumentInDatabaseWithResultResponse">
<part name="parameters" element="tns:saveDocumentInDatabaseWithResultResponse" />
</message>
<message name="saveAdditionalXml">
<part name="parameters" element="tns:saveAdditionalXml" />
</message>
<message name="saveAdditionalXmlResponse">
<part name="parameters" element="tns:saveAdditionalXmlResponse" />
</message>
<message name="saveBatchAdditionalXml">
<part name="parameters" element="tns:saveBatchAdditionalXml" />
</message>
<message name="saveBatchAdditionalXmlResponse">
<part name="parameters" element="tns:saveBatchAdditionalXmlResponse" />
</message>
<message name="getAdditionalXml">
<part name="parameters" element="tns:getAdditionalXml" />
</message>
<message name="getAdditionalXmlResponse">
<part name="parameters" element="tns:getAdditionalXmlResponse" />
</message>
<message name="getBatchAdditionalXml">
<part name="parameters" element="tns:getBatchAdditionalXml" />
</message>
<message name="getBatchAdditionalXmlResponse">
<part name="parameters" element="tns:getBatchAdditionalXmlResponse" />
</message>
<message name="getBatchAdditionalXmlWithTimestamp">
<part name="parameters" element="tns:getBatchAdditionalXmlWithTimestamp" />
</message>
<message name="getBatchAdditionalXmlWithTimestampResponse">
<part name="parameters" element="tns:getBatchAdditionalXmlWithTimestampResponse" />
</message>
<message name="getAdditionalXmlKeys">
<part name="parameters" element="tns:getAdditionalXmlKeys" />
</message>
<message name="getAdditionalXmlKeysResponse">
<part name="parameters" element="tns:getAdditionalXmlKeysResponse" />
</message>
<message name="getPotentialAdditionalXmlKeys">
<part name="parameters" element="tns:getPotentialAdditionalXmlKeys" />
</message>
<message name="getPotentialAdditionalXmlKeysResponse">
<part name="parameters" element="tns:getPotentialAdditionalXmlKeysResponse" />
</message>
<message name="deleteAdditionalXml">
<part name="parameters" element="tns:deleteAdditionalXml" />
</message>
<message name="deleteAdditionalXmlResponse">
<part name="parameters" element="tns:deleteAdditionalXmlResponse" />
</message>
<message name="getNewHiddenElementName">
<part name="parameters" element="tns:getNewHiddenElementName" />
</message>
<message name="getNewHiddenElementNameResponse">
<part name="parameters" element="tns:getNewHiddenElementNameResponse" />
</message>
<message name="updateSpecialElementInDatabase">
<part name="parameters" element="tns:updateSpecialElementInDatabase" />
</message>
<message name="updateSpecialElementInDatabaseResponse">
<part name="parameters" element="tns:updateSpecialElementInDatabaseResponse" />
</message>
<message name="addHiddenSpecialToDatabase">
<part name="parameters" element="tns:addHiddenSpecialToDatabase" />
</message>
<message name="addHiddenSpecialToDatabaseResponse">
<part name="parameters" element="tns:addHiddenSpecialToDatabaseResponse" />
</message>
<message name="getNamesOfSpecialElements">
<part name="parameters" element="tns:getNamesOfSpecialElements" />
</message>
<message name="getNamesOfSpecialElementsResponse">
<part name="parameters" element="tns:getNamesOfSpecialElementsResponse" />
</message>
<message name="getSpecialElementFromDatabase">
<part name="parameters" element="tns:getSpecialElementFromDatabase" />
</message>
<message name="getSpecialElementFromDatabaseResponse">
<part name="parameters" element="tns:getSpecialElementFromDatabaseResponse" />
</message>
<message name="removeSpecialElementFromDatabase">
<part name="parameters" element="tns:removeSpecialElementFromDatabase" />
</message>
<message name="removeSpecialElementFromDatabaseResponse">
<part name="parameters" element="tns:removeSpecialElementFromDatabaseResponse" />
</message>
<message name="getFolderViewDocumentUrn">
<part name="parameters" element="tns:getFolderViewDocumentUrn" />
</message>
<message name="getFolderViewDocumentUrnResponse">
<part name="parameters" element="tns:getFolderViewDocumentUrnResponse" />
</message>
<message name="setFolderViewDocument">
<part name="parameters" element="tns:setFolderViewDocument" />
</message>
<message name="setFolderViewDocumentResponse">
<part name="parameters" element="tns:setFolderViewDocumentResponse" />
</message>
<message name="getNewDocId">
<part name="parameters" element="tns:getNewDocId" />
</message>
<message name="getNewDocIdResponse">
<part name="parameters" element="tns:getNewDocIdResponse" />
</message>
<message name="addNewDocumentToDatabase">
<part name="parameters" element="tns:addNewDocumentToDatabase" />
</message>
<message name="addNewDocumentToDatabaseResponse">
<part name="parameters" element="tns:addNewDocumentToDatabaseResponse" />
</message>
<message name="getFolderIdsOfDocumentUrns">
<part name="parameters" element="tns:getFolderIdsOfDocumentUrns" />
</message>
<message name="getFolderIdsOfDocumentUrnsResponse">
<part name="parameters" element="tns:getFolderIdsOfDocumentUrnsResponse" />
</message>
<message name="getUrnsForDocumentsFromFoldersMatchingQuery">
<part name="parameters" element="tns:getUrnsForDocumentsFromFoldersMatchingQuery" />
</message>
<message name="getUrnsForDocumentsFromFoldersMatchingQueryResponse">
<part name="parameters" element="tns:getUrnsForDocumentsFromFoldersMatchingQueryResponse" />
</message>
<message name="getSearchFieldsFromDatabase">
<part name="parameters" element="tns:getSearchFieldsFromDatabase" />
</message>
<message name="getSearchFieldsFromDatabaseResponse">
<part name="parameters" element="tns:getSearchFieldsFromDatabaseResponse" />
</message>
<message name="getReadCount">
<part name="parameters" element="tns:getReadCount" />
</message>
<message name="getReadCountResponse">
<part name="parameters" element="tns:getReadCountResponse" />
</message>
<message name="getFolderDocumentCount">
<part name="parameters" element="tns:getFolderDocumentCount" />
</message>
<message name="getFolderDocumentCountResponse">
<part name="parameters" element="tns:getFolderDocumentCountResponse" />
</message>
<message name="getCurrentFolderDetails">
<part name="parameters" element="tns:getCurrentFolderDetails" />
</message>
<message name="getCurrentFolderDetailsResponse">
<part name="parameters" element="tns:getCurrentFolderDetailsResponse" />
</message>
<message name="getDocumentTimestampsForFolder">
<part name="parameters" element="tns:getDocumentTimestampsForFolder" />
</message>
<message name="getDocumentTimestampsForFolderResponse">
<part name="parameters" element="tns:getDocumentTimestampsForFolderResponse" />
</message>
<message name="getSpecialElementTimestampsForFolder">
<part name="parameters" element="tns:getSpecialElementTimestampsForFolder" />
</message>
<message name="getSpecialElementTimestampsForFolderResponse">
<part name="parameters" element="tns:getSpecialElementTimestampsForFolderResponse" />
</message>
<message name="getAllSpecialElementTimestamps">
<part name="parameters" element="tns:getAllSpecialElementTimestamps" />
</message>
<message name="getAllSpecialElementTimestampsResponse">
<part name="parameters" element="tns:getAllSpecialElementTimestampsResponse" />
</message>
<message name="retrieveFolderTreeInformation">
<part name="parameters" element="tns:retrieveFolderTreeInformation" />
</message>
<message name="retrieveFolderTreeInformationResponse">
<part name="parameters" element="tns:retrieveFolderTreeInformationResponse" />
</message>
<message name="getPluginElementStream">
<part name="parameters" element="tns:getPluginElementStream" />
</message>
<message name="getPluginElementStreamResponse">
<part name="parameters" element="tns:getPluginElementStreamResponse" />
</message>
<message name="getPluginElementStreamForUrn">
<part name="parameters" element="tns:getPluginElementStreamForUrn" />
</message>
<message name="getPluginElementStreamForUrnResponse">
<part name="parameters" element="tns:getPluginElementStreamForUrnResponse" />
</message>
<message name="getPluginElementStreamForDocumentId">
<part name="parameters" element="tns:getPluginElementStreamForDocumentId" />
</message>
<message name="getPluginElementStreamForDocumentIdResponse">
<part name="parameters" element="tns:getPluginElementStreamForDocumentIdResponse" />
</message>
<message name="getFileDataInputStream">
<part name="parameters" element="tns:getFileDataInputStream" />
</message>
<message name="getFileDataInputStreamResponse">
<part name="parameters" element="tns:getFileDataInputStreamResponse" />
</message>
<message name="getGroupsUserIsAdminFor">
<part name="parameters" element="tns:getGroupsUserIsAdminFor" />
</message>
<message name="getGroupsUserIsAdminForResponse">
<part name="parameters" element="tns:getGroupsUserIsAdminForResponse" />
</message>
<message name="setFolderGroup">
<part name="parameters" element="tns:setFolderGroup" />
</message>
<message name="setFolderGroupResponse">
<part name="parameters" element="tns:setFolderGroupResponse" />
</message>
<message name="getUserRolesForGroups">
<part name="parameters" element="tns:getUserRolesForGroups" />
</message>
<message name="getUserRolesForGroupsResponse">
<part name="parameters" element="tns:getUserRolesForGroupsResponse" />
</message>
<message name="applyUserGroupRoleSettings">
<part name="parameters" element="tns:applyUserGroupRoleSettings" />
</message>
<message name="applyUserGroupRoleSettingsResponse">
<part name="parameters" element="tns:applyUserGroupRoleSettingsResponse" />
</message>
<message name="supportsCreatingRemovingUsers">
<part name="parameters" element="tns:supportsCreatingRemovingUsers" />
</message>
<message name="supportsCreatingRemovingUsersResponse">
<part name="parameters" element="tns:supportsCreatingRemovingUsersResponse" />
</message>
<message name="removeUsers">
<part name="parameters" element="tns:removeUsers" />
</message>
<message name="removeUsersResponse">
<part name="parameters" element="tns:removeUsersResponse" />
</message>
<message name="getUserFromDatabaseById">
<part name="parameters" element="tns:getUserFromDatabaseById" />
</message>
<message name="getUserFromDatabaseByIdResponse">
<part name="parameters" element="tns:getUserFromDatabaseByIdResponse" />
</message>
<message name="setStoreFileDataLocally">
<part name="parameters" element="tns:setStoreFileDataLocally" />
</message>
<message name="setStoreFileDataLocallyResponse">
<part name="parameters" element="tns:setStoreFileDataLocallyResponse" />
</message>
<message name="getMetadataPropertyValue">
<part name="parameters" element="tns:getMetadataPropertyValue" />
</message>
<message name="getMetadataPropertyValueResponse">
<part name="parameters" element="tns:getMetadataPropertyValueResponse" />
</message>
<message name="setMetadataPropertyValue">
<part name="parameters" element="tns:setMetadataPropertyValue" />
</message>
<message name="setMetadataPropertyValueResponse">
<part name="parameters" element="tns:setMetadataPropertyValueResponse" />
</message>
<message name="markFileIdsAsNeeded">
<part name="parameters" element="tns:markFileIdsAsNeeded" />
</message>
<message name="markFileIdsAsNeededResponse">
<part name="parameters" element="tns:markFileIdsAsNeededResponse" />
</message>
<message name="getPropertyForUser">
<part name="parameters" element="tns:getPropertyForUser" />
</message>
<message name="getPropertyForUserResponse">
<part name="parameters" element="tns:getPropertyForUserResponse" />
</message>
<message name="setPropertyForUser">
<part name="parameters" element="tns:setPropertyForUser" />
</message>
<message name="setPropertyForUserResponse">
<part name="parameters" element="tns:setPropertyForUserResponse" />
</message>
<message name="getNumberOfPendingDocumentsToBeIndexed">
<part name="parameters" element="tns:getNumberOfPendingDocumentsToBeIndexed" />
</message>
<message name="getNumberOfPendingDocumentsToBeIndexedResponse">
<part name="parameters" element="tns:getNumberOfPendingDocumentsToBeIndexedResponse" />
</message>
<message name="getServerVersion">
<part name="parameters" element="tns:getServerVersion" />
</message>
<message name="getServerVersionResponse">
<part name="parameters" element="tns:getServerVersionResponse" />
</message>
<message name="getUsername">
<part name="parameters" element="tns:getUsername" />
</message>
<message name="getUsernameResponse">
<part name="parameters" element="tns:getUsernameResponse" />
</message>
<message name="login">
<part name="parameters" element="tns:login" />
</message>
<message name="loginResponse">
<part name="parameters" element="tns:loginResponse" />
</message>
<message name="logout">
<part name="parameters" element="tns:logout" />
</message>
<message name="logoutResponse">
<part name="parameters" element="tns:logoutResponse" />
</message>
<message name="addGroup">
<part name="parameters" element="tns:addGroup" />
</message>
<message name="addGroupResponse">
<part name="parameters" element="tns:addGroupResponse" />
</message>
<message name="removeGroups">
<part name="parameters" element="tns:removeGroups" />
</message>
<message name="removeGroupsResponse">
<part name="parameters" element="tns:removeGroupsResponse" />
</message>
<message name="createUser">
<part name="parameters" element="tns:createUser" />
</message>
<message name="createUserResponse">
<part name="parameters" element="tns:createUserResponse" />
</message>
<portType name="GeneiousDatabaseWebService">
<operation name="editUser">
<input message="tns:editUser" />
<output message="tns:editUserResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getMinimumSupportedVersionOfGeneious">
<input message="tns:getMinimumSupportedVersionOfGeneious" />
<output message="tns:getMinimumSupportedVersionOfGeneiousResponse" />
</operation>
<operation name="getGeneiousCoreVersion">
<input message="tns:getGeneiousCoreVersion" />
<output message="tns:getGeneiousCoreVersionResponse" />
</operation>
<operation name="getHiddenFolderNamesFromDatabase">
<input message="tns:getHiddenFolderNamesFromDatabase" />
<output message="tns:getHiddenFolderNamesFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getHiddenFolderDetailsForUser">
<input message="tns:getHiddenFolderDetailsForUser" />
<output message="tns:getHiddenFolderDetailsForUserResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getHiddenFolderInformationFromDatabase">
<input message="tns:getHiddenFolderInformationFromDatabase" />
<output message="tns:getHiddenFolderInformationFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="renameFolderInDatabase">
<input message="tns:renameFolderInDatabase" />
<output message="tns:renameFolderInDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="moveDocumentToThisDatabaseFolder">
<input message="tns:moveDocumentToThisDatabaseFolder" />
<output message="tns:moveDocumentToThisDatabaseFolderResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="removeDocumentFromDatabase">
<input message="tns:removeDocumentFromDatabase" />
<output message="tns:removeDocumentFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getDocumentElementsForUrns">
<input message="tns:getDocumentElementsForUrns" />
<output message="tns:getDocumentElementsForUrnsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="createChildFolderInDatabase">
<input message="tns:createChildFolderInDatabase" />
<output message="tns:createChildFolderInDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="moveToDatabaseFolder">
<input message="tns:moveToDatabaseFolder" />
<output message="tns:moveToDatabaseFolderResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="deleteChildFolderFromDatabase">
<input message="tns:deleteChildFolderFromDatabase" />
<output message="tns:deleteChildFolderFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="saveDocumentReadStatus">
<input message="tns:saveDocumentReadStatus" />
<output message="tns:saveDocumentReadStatusResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getUserDetailsAndAddToDatabaseIfNecessary">
<input message="tns:getUserDetailsAndAddToDatabaseIfNecessary" />
<output message="tns:getUserDetailsAndAddToDatabaseIfNecessaryResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="createDocumentsForUrnsFromDatabase">
<input message="tns:createDocumentsForUrnsFromDatabase" />
<output message="tns:createDocumentsForUrnsFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="saveDocumentInDatabase">
<input message="tns:saveDocumentInDatabase" />
<output message="tns:saveDocumentInDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="saveDocumentInDatabaseWithResult">
<input message="tns:saveDocumentInDatabaseWithResult" />
<output message="tns:saveDocumentInDatabaseWithResultResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="saveAdditionalXml">
<input message="tns:saveAdditionalXml" />
<output message="tns:saveAdditionalXmlResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="saveBatchAdditionalXml">
<input message="tns:saveBatchAdditionalXml" />
<output message="tns:saveBatchAdditionalXmlResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getAdditionalXml">
<input message="tns:getAdditionalXml" />
<output message="tns:getAdditionalXmlResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getBatchAdditionalXml">
<input message="tns:getBatchAdditionalXml" />
<output message="tns:getBatchAdditionalXmlResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getBatchAdditionalXmlWithTimestamp">
<input message="tns:getBatchAdditionalXmlWithTimestamp" />
<output message="tns:getBatchAdditionalXmlWithTimestampResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getAdditionalXmlKeys">
<input message="tns:getAdditionalXmlKeys" />
<output message="tns:getAdditionalXmlKeysResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getPotentialAdditionalXmlKeys">
<input message="tns:getPotentialAdditionalXmlKeys" />
<output message="tns:getPotentialAdditionalXmlKeysResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="deleteAdditionalXml">
<input message="tns:deleteAdditionalXml" />
<output message="tns:deleteAdditionalXmlResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getNewHiddenElementName">
<input message="tns:getNewHiddenElementName" />
<output message="tns:getNewHiddenElementNameResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="updateSpecialElementInDatabase">
<input message="tns:updateSpecialElementInDatabase" />
<output message="tns:updateSpecialElementInDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="addHiddenSpecialToDatabase">
<input message="tns:addHiddenSpecialToDatabase" />
<output message="tns:addHiddenSpecialToDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getNamesOfSpecialElements">
<input message="tns:getNamesOfSpecialElements" />
<output message="tns:getNamesOfSpecialElementsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getSpecialElementFromDatabase">
<input message="tns:getSpecialElementFromDatabase" />
<output message="tns:getSpecialElementFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="removeSpecialElementFromDatabase">
<input message="tns:removeSpecialElementFromDatabase" />
<output message="tns:removeSpecialElementFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getFolderViewDocumentUrn">
<input message="tns:getFolderViewDocumentUrn" />
<output message="tns:getFolderViewDocumentUrnResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="setFolderViewDocument">
<input message="tns:setFolderViewDocument" />
<output message="tns:setFolderViewDocumentResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getNewDocId">
<input message="tns:getNewDocId" />
<output message="tns:getNewDocIdResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="addNewDocumentToDatabase">
<input message="tns:addNewDocumentToDatabase" />
<output message="tns:addNewDocumentToDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getFolderIdsOfDocumentUrns">
<input message="tns:getFolderIdsOfDocumentUrns" />
<output message="tns:getFolderIdsOfDocumentUrnsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getUrnsForDocumentsFromFoldersMatchingQuery">
<input message="tns:getUrnsForDocumentsFromFoldersMatchingQuery" />
<output message="tns:getUrnsForDocumentsFromFoldersMatchingQueryResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getSearchFieldsFromDatabase">
<input message="tns:getSearchFieldsFromDatabase" />
<output message="tns:getSearchFieldsFromDatabaseResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getReadCount">
<input message="tns:getReadCount" />
<output message="tns:getReadCountResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getFolderDocumentCount">
<input message="tns:getFolderDocumentCount" />
<output message="tns:getFolderDocumentCountResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getCurrentFolderDetails">
<input message="tns:getCurrentFolderDetails" />
<output message="tns:getCurrentFolderDetailsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getDocumentTimestampsForFolder">
<input message="tns:getDocumentTimestampsForFolder" />
<output message="tns:getDocumentTimestampsForFolderResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getSpecialElementTimestampsForFolder">
<input message="tns:getSpecialElementTimestampsForFolder" />
<output message="tns:getSpecialElementTimestampsForFolderResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getAllSpecialElementTimestamps">
<input message="tns:getAllSpecialElementTimestamps" />
<output message="tns:getAllSpecialElementTimestampsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="retrieveFolderTreeInformation">
<input message="tns:retrieveFolderTreeInformation" />
<output message="tns:retrieveFolderTreeInformationResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getPluginElementStream">
<input message="tns:getPluginElementStream" />
<output message="tns:getPluginElementStreamResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getPluginElementStreamForUrn">
<input message="tns:getPluginElementStreamForUrn" />
<output message="tns:getPluginElementStreamForUrnResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getPluginElementStreamForDocumentId">
<input message="tns:getPluginElementStreamForDocumentId" />
<output message="tns:getPluginElementStreamForDocumentIdResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getFileDataInputStream">
<input message="tns:getFileDataInputStream" />
<output message="tns:getFileDataInputStreamResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getGroupsUserIsAdminFor">
<input message="tns:getGroupsUserIsAdminFor" />
<output message="tns:getGroupsUserIsAdminForResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="setFolderGroup">
<input message="tns:setFolderGroup" />
<output message="tns:setFolderGroupResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getUserRolesForGroups">
<input message="tns:getUserRolesForGroups" />
<output message="tns:getUserRolesForGroupsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="applyUserGroupRoleSettings">
<input message="tns:applyUserGroupRoleSettings" />
<output message="tns:applyUserGroupRoleSettingsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="supportsCreatingRemovingUsers">
<input message="tns:supportsCreatingRemovingUsers" />
<output message="tns:supportsCreatingRemovingUsersResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="removeUsers">
<input message="tns:removeUsers" />
<output message="tns:removeUsersResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getUserFromDatabaseById">
<input message="tns:getUserFromDatabaseById" />
<output message="tns:getUserFromDatabaseByIdResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="setStoreFileDataLocally">
<input message="tns:setStoreFileDataLocally" />
<output message="tns:setStoreFileDataLocallyResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getMetadataPropertyValue">
<input message="tns:getMetadataPropertyValue" />
<output message="tns:getMetadataPropertyValueResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="setMetadataPropertyValue">
<input message="tns:setMetadataPropertyValue" />
<output message="tns:setMetadataPropertyValueResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="markFileIdsAsNeeded">
<input message="tns:markFileIdsAsNeeded" />
<output message="tns:markFileIdsAsNeededResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getPropertyForUser">
<input message="tns:getPropertyForUser" />
<output message="tns:getPropertyForUserResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="setPropertyForUser">
<input message="tns:setPropertyForUser" />
<output message="tns:setPropertyForUserResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getNumberOfPendingDocumentsToBeIndexed">
<input message="tns:getNumberOfPendingDocumentsToBeIndexed" />
<output message="tns:getNumberOfPendingDocumentsToBeIndexedResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="getServerVersion">
<input message="tns:getServerVersion" />
<output message="tns:getServerVersionResponse" />
</operation>
<operation name="getUsername">
<input message="tns:getUsername" />
<output message="tns:getUsernameResponse" />
</operation>
<operation name="login">
<input message="tns:login" />
<output message="tns:loginResponse" />
</operation>
<operation name="logout">
<input message="tns:logout" />
<output message="tns:logoutResponse" />
</operation>
<operation name="addGroup">
<input message="tns:addGroup" />
<output message="tns:addGroupResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="removeGroups">
<input message="tns:removeGroups" />
<output message="tns:removeGroupsResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
<operation name="createUser">
<input message="tns:createUser" />
<output message="tns:createUserResponse" />
<fault message="tns:RemoteDatabaseException" name="RemoteDatabaseException" />
</operation>
</portType>
<binding name="GeneiousDatabaseWebServicePortBinding" type="tns:GeneiousDatabaseWebService">
<ns2:PolicyReference xmlns:ns2="http://www.w3.org/ns/ws-policy" URI="#GeneiousDatabaseWebServicePortBinding_MTOM_Policy" />
<soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
<operation name="editUser">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getMinimumSupportedVersionOfGeneious">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
</operation>
<operation name="getGeneiousCoreVersion">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
</operation>
<operation name="getHiddenFolderNamesFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getHiddenFolderDetailsForUser">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getHiddenFolderInformationFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="renameFolderInDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="moveDocumentToThisDatabaseFolder">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="removeDocumentFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getDocumentElementsForUrns">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="createChildFolderInDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="moveToDatabaseFolder">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="deleteChildFolderFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="saveDocumentReadStatus">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getUserDetailsAndAddToDatabaseIfNecessary">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="createDocumentsForUrnsFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="saveDocumentInDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="saveDocumentInDatabaseWithResult">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="saveAdditionalXml">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="saveBatchAdditionalXml">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getAdditionalXml">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getBatchAdditionalXml">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getBatchAdditionalXmlWithTimestamp">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getAdditionalXmlKeys">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getPotentialAdditionalXmlKeys">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="deleteAdditionalXml">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getNewHiddenElementName">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="updateSpecialElementInDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="addHiddenSpecialToDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getNamesOfSpecialElements">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getSpecialElementFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="removeSpecialElementFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getFolderViewDocumentUrn">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="setFolderViewDocument">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getNewDocId">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="addNewDocumentToDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getFolderIdsOfDocumentUrns">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getUrnsForDocumentsFromFoldersMatchingQuery">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getSearchFieldsFromDatabase">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getReadCount">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getFolderDocumentCount">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getCurrentFolderDetails">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getDocumentTimestampsForFolder">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getSpecialElementTimestampsForFolder">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getAllSpecialElementTimestamps">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="retrieveFolderTreeInformation">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getPluginElementStream">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getPluginElementStreamForUrn">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getPluginElementStreamForDocumentId">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getFileDataInputStream">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getGroupsUserIsAdminFor">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="setFolderGroup">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getUserRolesForGroups">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="applyUserGroupRoleSettings">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="supportsCreatingRemovingUsers">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="removeUsers">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getUserFromDatabaseById">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="setStoreFileDataLocally">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getMetadataPropertyValue">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="setMetadataPropertyValue">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="markFileIdsAsNeeded">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getPropertyForUser">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="setPropertyForUser">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getNumberOfPendingDocumentsToBeIndexed">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="getServerVersion">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
</operation>
<operation name="getUsername">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
</operation>
<operation name="login">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
</operation>
<operation name="logout">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
</operation>
<operation name="addGroup">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="removeGroups">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
<operation name="createUser">
<soap12:operation soapAction="" />
<input>
<soap12:body use="literal" />
</input>
<output>
<soap12:body use="literal" />
</output>
<fault name="RemoteDatabaseException">
<soap12:fault name="RemoteDatabaseException" use="literal" />
</fault>
</operation>
</binding>
<service name="GeneiousDatabaseWebServiceService">
<port name="GeneiousDatabaseWebServicePort" binding="tns:GeneiousDatabaseWebServicePortBinding">
<soap12:address location="http://localhost:8080/GeneiousServer/services/GeneiousDatabaseWebService" />
</port>
</service>
</definitions>